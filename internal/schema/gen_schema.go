// Package schema provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.15.0 DO NOT EDIT.
package schema

import (
	"encoding/json"
	"time"

	"github.com/oapi-codegen/runtime"
	openapi_types "github.com/oapi-codegen/runtime/types"
)

// Defines values for BookingExtraOrFeeType.
const (
	Extra BookingExtraOrFeeType = "Extra"
	Fee   BookingExtraOrFeeType = "Fee"
)

// Defines values for BookingResponseStatus.
const (
	BookingResponseStatusFAILED  BookingResponseStatus = "FAILED"
	BookingResponseStatusOK      BookingResponseStatus = "OK"
	BookingResponseStatusPENDING BookingResponseStatus = "PENDING"
)

// Defines values for BookingStatusResponseStatus.
const (
	BookingStatusResponseStatusCANCELLED BookingStatusResponseStatus = "CANCELLED"
	BookingStatusResponseStatusFAILED    BookingStatusResponseStatus = "FAILED"
	BookingStatusResponseStatusOK        BookingStatusResponseStatus = "OK"
	BookingStatusResponseStatusPENDING   BookingStatusResponseStatus = "PENDING"
)

// Defines values for CancelResponseStatus.
const (
	CancelResponseStatusFAILED CancelResponseStatus = "FAILED"
	CancelResponseStatusOK     CancelResponseStatus = "OK"
)

// Defines values for ExtraOrFeeType.
const (
	EQP ExtraOrFeeType = "EQP"
	VCP ExtraOrFeeType = "VCP"
	VCT ExtraOrFeeType = "VCT"
)

// Defines values for ExtraOrFeeUnit.
const (
	PerDay    ExtraOrFeeUnit = "per day"
	PerRental ExtraOrFeeUnit = "per rental"
)

// Defines values for LocationAdditionalContactContactType.
const (
	Fax      LocationAdditionalContactContactType = "fax"
	Mobile   LocationAdditionalContactContactType = "mobile"
	Other    LocationAdditionalContactContactType = "other"
	Phone    LocationAdditionalContactContactType = "phone"
	Tollfree LocationAdditionalContactContactType = "tollfree"
)

// Defines values for MileageDistanceUnit.
const (
	Km   MileageDistanceUnit = "Km"
	Mile MileageDistanceUnit = "Mile"
)

// Defines values for MileagePeriodUnit.
const (
	Day          MileagePeriodUnit = "Day"
	Hour         MileagePeriodUnit = "Hour"
	RentalPeriod MileagePeriodUnit = "RentalPeriod"
)

// Defines values for ModifyResponseStatus.
const (
	ModifyResponseStatusFAILED  ModifyResponseStatus = "FAILED"
	ModifyResponseStatusOK      ModifyResponseStatus = "OK"
	ModifyResponseStatusPENDING ModifyResponseStatus = "PENDING"
)

// Defines values for RentlyConfigurationCommercialAgreementCode.
const (
	PayOnDestination RentlyConfigurationCommercialAgreementCode = "PayOnDestination"
	Prepaid          RentlyConfigurationCommercialAgreementCode = "Prepaid"
)

// Defines values for SupplierRequestName.
const (
	Auth          SupplierRequestName = "auth"
	Booking       SupplierRequestName = "booking"
	BookingStatus SupplierRequestName = "booking-status"
	Cancel        SupplierRequestName = "cancel"
	Extras        SupplierRequestName = "extras"
	Locations     SupplierRequestName = "locations"
	Modify        SupplierRequestName = "modify"
	Quote         SupplierRequestName = "quote"
	Rates         SupplierRequestName = "rates"
)

// Defines values for SupplierResponseErrorCode.
const (
	ConnectionError SupplierResponseErrorCode = "ConnectionError"
	SupplierError   SupplierResponseErrorCode = "SupplierError"
	TimeoutError    SupplierResponseErrorCode = "TimeoutError"
)

// Defines values for VehicleDriveType.
const (
	AWD  VehicleDriveType = "AWD"
	N4WD VehicleDriveType = "4WD"
)

// Defines values for VehicleFuelType.
const (
	Diesel    VehicleFuelType = "Diesel"
	Electric  VehicleFuelType = "Electric"
	Ethanol   VehicleFuelType = "Ethanol"
	Gas       VehicleFuelType = "Gas"
	Hybrid    VehicleFuelType = "Hybrid"
	Hydrogen  VehicleFuelType = "Hydrogen"
	MultiFuel VehicleFuelType = "Multi Fuel"
	Petrol    VehicleFuelType = "Petrol"
)

// Defines values for VehicleStatus.
const (
	AVAILABLE VehicleStatus = "AVAILABLE"
	ONREQUEST VehicleStatus = "ON_REQUEST"
)

// Defines values for VehicleTransmissionType.
const (
	Automatic VehicleTransmissionType = "Automatic"
	Manual    VehicleTransmissionType = "Manual"
)

// Defines values for RequiredPlatformInPath.
const (
	RequiredPlatformInPathAnyrent      RequiredPlatformInPath = "anyrent"
	RequiredPlatformInPathBookingcom   RequiredPlatformInPath = "bookingcom"
	RequiredPlatformInPathHertz        RequiredPlatformInPath = "hertz"
	RequiredPlatformInPathProfitmaxdht RequiredPlatformInPath = "profitmaxdht"
	RequiredPlatformInPathRently       RequiredPlatformInPath = "rently"
)

// Defines values for CreateBookingParamsPlatform.
const (
	CreateBookingParamsPlatformAnyrent      CreateBookingParamsPlatform = "anyrent"
	CreateBookingParamsPlatformBookingcom   CreateBookingParamsPlatform = "bookingcom"
	CreateBookingParamsPlatformHertz        CreateBookingParamsPlatform = "hertz"
	CreateBookingParamsPlatformProfitmaxdht CreateBookingParamsPlatform = "profitmaxdht"
	CreateBookingParamsPlatformRently       CreateBookingParamsPlatform = "rently"
)

// Defines values for CheckBookingStatusParamsPlatform.
const (
	CheckBookingStatusParamsPlatformAnyrent      CheckBookingStatusParamsPlatform = "anyrent"
	CheckBookingStatusParamsPlatformBookingcom   CheckBookingStatusParamsPlatform = "bookingcom"
	CheckBookingStatusParamsPlatformHertz        CheckBookingStatusParamsPlatform = "hertz"
	CheckBookingStatusParamsPlatformProfitmaxdht CheckBookingStatusParamsPlatform = "profitmaxdht"
	CheckBookingStatusParamsPlatformRently       CheckBookingStatusParamsPlatform = "rently"
)

// Defines values for CancelBookingParamsPlatform.
const (
	CancelBookingParamsPlatformAnyrent      CancelBookingParamsPlatform = "anyrent"
	CancelBookingParamsPlatformBookingcom   CancelBookingParamsPlatform = "bookingcom"
	CancelBookingParamsPlatformHertz        CancelBookingParamsPlatform = "hertz"
	CancelBookingParamsPlatformProfitmaxdht CancelBookingParamsPlatform = "profitmaxdht"
	CancelBookingParamsPlatformRently       CancelBookingParamsPlatform = "rently"
)

// Defines values for GetLocationsParamsPlatform.
const (
	GetLocationsParamsPlatformAnyrent      GetLocationsParamsPlatform = "anyrent"
	GetLocationsParamsPlatformBookingcom   GetLocationsParamsPlatform = "bookingcom"
	GetLocationsParamsPlatformHertz        GetLocationsParamsPlatform = "hertz"
	GetLocationsParamsPlatformProfitmaxdht GetLocationsParamsPlatform = "profitmaxdht"
	GetLocationsParamsPlatformRently       GetLocationsParamsPlatform = "rently"
)

// Defines values for ModifyBookingParamsPlatform.
const (
	ModifyBookingParamsPlatformAnyrent      ModifyBookingParamsPlatform = "anyrent"
	ModifyBookingParamsPlatformBookingcom   ModifyBookingParamsPlatform = "bookingcom"
	ModifyBookingParamsPlatformHertz        ModifyBookingParamsPlatform = "hertz"
	ModifyBookingParamsPlatformProfitmaxdht ModifyBookingParamsPlatform = "profitmaxdht"
	ModifyBookingParamsPlatformRently       ModifyBookingParamsPlatform = "rently"
)

// Defines values for GetRatesParamsPlatform.
const (
	Anyrent      GetRatesParamsPlatform = "anyrent"
	Bookingcom   GetRatesParamsPlatform = "bookingcom"
	Hertz        GetRatesParamsPlatform = "hertz"
	Profitmaxdht GetRatesParamsPlatform = "profitmaxdht"
	Rently       GetRatesParamsPlatform = "rently"
)

// AgeRange defines model for AgeRange.
type AgeRange struct {
	Classes *map[string]interface{} `json:"classes,omitempty"`
	Code    *string                 `json:"code,omitempty"`
	Max     *int                    `json:"max,omitempty"`
	Min     *int                    `json:"min,omitempty"`
	OtaCode *int                    `json:"otaCode,omitempty"`
}

// AnyRentConfiguration Supplier specific parameters for all post-type requests except booking. Override in supplier module for all post-routes except booking
type AnyRentConfiguration struct {
	// ApiKey Api key
	ApiKey string `json:"apiKey"`

	// SupplierApiUrl Supplier api url
	SupplierApiUrl string `json:"supplierApiUrl"`
}

// BookingComConfiguration Supplier specific parameters for all post-type requests except booking. Override in supplier module for all post-routes except booking
type BookingComConfiguration struct {
	// AffiliateCode Affiliate code
	AffiliateCode string `json:"affiliateCode"`

	// Password Password
	Password string `json:"password"`

	// SupplierApiUrl Supplier api url
	SupplierApiUrl string `json:"supplierApiUrl"`

	// SupplierName Supplier name, which is used for filtering out vehicles
	SupplierName string `json:"supplierName"`

	// Test Test mode
	Test *bool `json:"test,omitempty"`

	// Username Username
	Username string `json:"username"`
}

// BookingExtraOrFee defines model for BookingExtraOrFee.
type BookingExtraOrFee struct {
	Availability *ExtraAvailability `json:"availability,omitempty"`

	// Code Supplier extra code
	Code string `json:"code"`

	// IsIncluded Is included in rate
	IsIncluded *bool `json:"isIncluded,omitempty"`

	// IsMandatory Is mandatory
	IsMandatory *bool `json:"isMandatory,omitempty"`

	// Quantity Quantity
	Quantity *int `json:"quantity,omitempty"`

	// Type Type
	Type BookingExtraOrFeeType `json:"type"`
}

// BookingExtraOrFeeType Type
type BookingExtraOrFeeType string

// BookingRequestParams defines model for BookingRequestParams.
type BookingRequestParams struct {
	AirlineCode     *string    `json:"airlineCode,omitempty"`
	BookingDateTime *time.Time `json:"bookingDateTime,omitempty"`

	// BrokerReference Car Rental Gateway booking/broker reference
	BrokerReference string `json:"brokerReference"`

	// CarSupplierPaymentPrice Price amount with currency
	CarSupplierPaymentPrice *PriceAmount `json:"carSupplierPaymentPrice,omitempty"`

	// CarSupplierPaymentPriceInPaymentCurrency Price amount with currency
	CarSupplierPaymentPriceInPaymentCurrency *PriceAmount `json:"carSupplierPaymentPriceInPaymentCurrency,omitempty"`
	Comments                                 *struct {
		// Customer A message from customer to supplier
		Customer *string `json:"customer,omitempty"`
	} `json:"comments,omitempty"`
	Configuration BookingRequestParams_Configuration `json:"configuration"`
	Contract      Contract                           `json:"contract"`
	Customer      Customer                           `json:"customer"`
	DropOff       RequestBranchWithTimeZone          `json:"dropOff"`
	ExtrasAndFees *[]BookingExtraOrFee               `json:"extrasAndFees,omitempty"`

	// FlightNo Flight number
	FlightNo *string `json:"flightNo,omitempty"`

	// FlightNumber Flight number
	FlightNumber *string `json:"flightNumber,omitempty"`

	// ModuleId Module ID
	ModuleId int `json:"moduleId"`

	// OnlineFeeMap Online fee map
	OnlineFeeMap *map[string]interface{}   `json:"onlineFeeMap,omitempty"`
	PickUp       RequestBranchWithTimeZone `json:"pickUp"`

	// RentalDays Rental days
	RentalDays *int `json:"rentalDays,omitempty"`

	// ReservNumber Car Rental Gateway booking reservation number
	ReservNumber        string               `json:"reservNumber"`
	SupplierPassthrough *SupplierPassthrough `json:"supplierPassthrough,omitempty"`

	// SupplierRateReference Supplier rate reference from rates request
	SupplierRateReference string `json:"supplierRateReference"`

	// SupplierSpecificInformation For carrying supplier specific information
	SupplierSpecificInformation *SupplierSpecificInformation `json:"supplierSpecificInformation,omitempty"`
	Timeouts                    Timeouts                     `json:"timeouts"`

	// VehicleClass Vehicle class in supplier system
	VehicleClass string `json:"vehicleClass"`
}

// BookingRequestParams_Configuration defines model for BookingRequestParams.Configuration.
type BookingRequestParams_Configuration struct {
	union json.RawMessage
}

// BookingResponse defines model for BookingResponse.
type BookingResponse struct {
	// Errors List supplier errors
	Errors *SupplierResponseErrors `json:"errors,omitempty"`

	// Status Booking status
	Status BookingResponseStatus `json:"status"`

	// SupplierBookingReference Supplier booking reference
	SupplierBookingReference *string `json:"supplierBookingReference,omitempty"`

	// SupplierData Supplier specific data about the booking as JSON string. This data is stored with booking and passed as configruation parameters for cancel, modify and bookingstatus requests
	SupplierData *map[string]interface{} `json:"supplierData,omitempty"`

	// SupplierRequests Requests made to and responses received from supplier system
	SupplierRequests *SupplierRequests `json:"supplierRequests,omitempty"`
}

// BookingResponseStatus Booking status
type BookingResponseStatus string

// BookingStatusRequestParams defines model for BookingStatusRequestParams.
type BookingStatusRequestParams struct {
	BookingDateTime time.Time `json:"bookingDateTime"`

	// BrokerReference Car Rental Gateway booking/broker reference
	BrokerReference string                                   `json:"brokerReference"`
	Configuration   BookingStatusRequestParams_Configuration `json:"configuration"`

	// Contact Contact info
	Contact *Contact `json:"contact,omitempty"`

	// ModuleId Module ID
	ModuleId int `json:"moduleId"`

	// ReservNumber Car Rental Gateway booking reservation number
	ReservNumber string `json:"reservNumber"`

	// SupplierBookingReference Supplier booking reference
	SupplierBookingReference string   `json:"supplierBookingReference"`
	Timeouts                 Timeouts `json:"timeouts"`
}

// BookingStatusRequestParams_Configuration defines model for BookingStatusRequestParams.Configuration.
type BookingStatusRequestParams_Configuration struct {
	union json.RawMessage
}

// BookingStatusResponse defines model for BookingStatusResponse.
type BookingStatusResponse struct {
	// Errors List supplier errors
	Errors *SupplierResponseErrors `json:"errors,omitempty"`

	// Status Booking status
	Status BookingStatusResponseStatus `json:"status"`

	// SupplierBookingReference Supplier booking reference
	SupplierBookingReference *string `json:"supplierBookingReference,omitempty"`

	// SupplierRequests Requests made to and responses received from supplier system
	SupplierRequests *SupplierRequests `json:"supplierRequests,omitempty"`
}

// BookingStatusResponseStatus Booking status
type BookingStatusResponseStatus string

// CancelRequestParams defines model for CancelRequestParams.
type CancelRequestParams struct {
	BookingDateTime *time.Time `json:"bookingDateTime,omitempty"`

	// BrokerReference Car Rental Gateway booking/broker reference
	BrokerReference string `json:"brokerReference"`

	// CancelReason Cancel reason (value in range 2 to 15)
	CancelReason  *int                              `json:"cancelReason,omitempty"`
	Configuration CancelRequestParams_Configuration `json:"configuration"`

	// Contact Contact info
	Contact Contact `json:"contact"`

	// ModuleId Module ID
	ModuleId int           `json:"moduleId"`
	PickUp   RequestBranch `json:"pickUp"`

	// ReservNumber Car Rental Gateway booking reservation number
	ReservNumber string `json:"reservNumber"`

	// SupplierBookingReference Supplier booking reference
	SupplierBookingReference string   `json:"supplierBookingReference"`
	Timeouts                 Timeouts `json:"timeouts"`
}

// CancelRequestParams_Configuration defines model for CancelRequestParams.Configuration.
type CancelRequestParams_Configuration struct {
	union json.RawMessage
}

// CancelResponse defines model for CancelResponse.
type CancelResponse struct {
	// Errors List supplier errors
	Errors *SupplierResponseErrors `json:"errors,omitempty"`

	// Status Was the cancellation successful.
	Status *CancelResponseStatus `json:"status,omitempty"`

	// SupplierRequests Requests made to and responses received from supplier system
	SupplierRequests *SupplierRequests `json:"supplierRequests,omitempty"`
}

// CancelResponseStatus Was the cancellation successful.
type CancelResponseStatus string

// Contact Contact info
type Contact struct {
	// Email E-mail
	Email openapi_types.Email `json:"email"`
}

// Contract defines model for Contract.
type Contract struct {
	// ContractId Contract id in car rental gateway
	ContractId *string `json:"contractId,omitempty"`

	// Currency Currency
	Currency string   `json:"currency"`
	MarkUp   *float32 `json:"markUp,omitempty"`

	// PaymentType Payment type. Allowed values: 0 - Full prepay, 1 - partial prepay
	PaymentType     int   `json:"paymentType"`
	ReturnXmlProfit *bool `json:"returnXmlProfit,omitempty"`

	// SupplierId Supplier id in car rental gateway
	SupplierId int `json:"supplierId"`
}

// Customer defines model for Customer.
type Customer struct {
	// Age Driver age
	Age int `json:"age"`

	// Email Customer e-mail
	Email openapi_types.Email `json:"email"`

	// FirstName Customer first name
	FirstName string `json:"firstName"`

	// LastName Customer last name
	LastName string `json:"lastName"`

	// Phone Customer phone
	Phone string `json:"phone"`

	// ResidenceCountry Driver residence as country ISO code
	ResidenceCountry string `json:"residenceCountry"`

	// Title Title
	Title *string `json:"title,omitempty"`
}

// ExistingBooking defines model for ExistingBooking.
type ExistingBooking struct {
	BookingDateTime time.Time `json:"bookingDateTime"`
	Email           *string   `json:"email,omitempty"`
	FirstName       *string   `json:"firstName,omitempty"`
	LastName        *string   `json:"lastName,omitempty"`
	Phone           *string   `json:"phone,omitempty"`

	// ReservNumber Gateway reserv number
	ReservNumber *string `json:"reservNumber,omitempty"`

	// SupplierBookingReference Supplier booking reference
	SupplierBookingReference string `json:"supplierBookingReference"`
}

// ExtraAvailability defines model for ExtraAvailability.
type ExtraAvailability struct {
	// Available is the extra available
	Available bool `json:"available"`

	// ErrorCode Supplier specific code indicating why the extra is not available
	ErrorCode *string `json:"errorCode,omitempty"`

	// ErrorMessage Supplier specific message indicating why the extra is not available
	ErrorMessage *string `json:"errorMessage,omitempty"`
}

// ExtraOrFee defines model for ExtraOrFee.
type ExtraOrFee struct {
	// Code Code
	Code string `json:"code"`

	// Excess Price amount with currency
	Excess *PriceAmount `json:"excess,omitempty"`

	// IncludedInRate Is included
	IncludedInRate bool `json:"includedInRate"`

	// Mandatory Is mandatory
	Mandatory bool `json:"mandatory"`

	// MaxQuantity Maximum quantity of extra items
	MaxQuantity *int `json:"maxQuantity,omitempty"`

	// Name Name
	Name string `json:"name"`

	// PayLocal Is payed at pickup
	PayLocal bool `json:"payLocal"`

	// Price Price amount with currency
	Price PriceAmount `json:"price"`

	// Type Type
	Type ExtraOrFeeType  `json:"type"`
	Unit *ExtraOrFeeUnit `json:"unit,omitempty"`
}

// ExtraOrFeeType Type
type ExtraOrFeeType string

// ExtraOrFeeUnit defines model for ExtraOrFee.Unit.
type ExtraOrFeeUnit string

// HertzConfiguration Supplier specific parameters for all post-type requests except booking. Override in supplier module for all post-routes except booking
type HertzConfiguration struct {
	// FrequentTravellerProgramId For FTN identifies the company associated with the FTN/MembershipId
	FrequentTravellerProgramId *string `json:"FrequentTravellerProgramId,omitempty"`

	// FrequentTravellerTravelSector For FTN identifies FTN/MemmbershipID number. Allowed Values: 1 - FTN is Airline Frequent Flyer #, 2- #1 Club Number, 3 - Hotel Frequent Traveller #
	FrequentTravellerTravelSector *string `json:"FrequentTravellerTravelSector,omitempty"`

	// AddTaxToCoverages Coverage codes for which tax is added to the price
	AddTaxToCoverages *[]string `json:"addTaxToCoverages,omitempty"`
	Booking           *struct {
		BookingDateTime time.Time `json:"bookingDateTime"`

		// SupplierBookingReference Supplier booking reference
		SupplierBookingReference string `json:"supplierBookingReference"`
	} `json:"booking,omitempty"`

	// BookingAgent Booking agent
	BookingAgent *string `json:"bookingAgent,omitempty"`

	// CacheDebuglog Send detailed requests logging info for debugging
	CacheDebuglog *string `json:"cacheDebuglog,omitempty"`

	// ClubNumber Club Number
	ClubNumber *string `json:"clubNumber,omitempty"`

	// CorpDiscountNmbr Corporate Discount Number
	CorpDiscountNmbr *string `json:"corpDiscountNmbr,omitempty"`

	// Cp Consumer Product Code
	Cp *string `json:"cp,omitempty"`

	// FeePayableLocally Fees that are considered allways payable locally in certain countries. Example: { "AIRPORT CONCESSION RECOVERY": ["SE", "SA"] }
	FeePayableLocally *map[string][]string `json:"feePayableLocally,omitempty"`

	// FpPayFeesLocally It is used with full-prepay deals, to determine are the fees payable locally (true) or pay now (false). Default is false
	FpPayFeesLocally *bool `json:"fpPayFeesLocally,omitempty"`

	// FpPaynowVehiclePriceWithTax It works with full-prepay deals. If true, the Tax (VAT) is added to the vehicle price. Default is false
	FpPaynowVehiclePriceWithTax *bool `json:"fpPaynowVehiclePriceWithTax,omitempty"`

	// FrequentTravellerNumber frequent traveller number
	FrequentTravellerNumber *string `json:"frequentTravellerNumber,omitempty"`

	// IncludeCoveragesInRate If true, all required coverages will be included in vehicle price
	IncludeCoveragesInRate *bool `json:"includeCoveragesInRate,omitempty"`

	// LastName Customer last name who is the owner of the booking
	LastName *string `json:"lastName,omitempty"`

	// MaxResponses Max number of responses expected from Hertz. Default is 10
	MaxResponses *string `json:"maxResponses,omitempty"`

	// PayNowCoverages Supplier code(s) of coverage(s) that are not included in rate and are have to be set pay now (made for ITSC). Example: ["7","48"]
	PayNowCoverages *[]string `json:"payNowCoverages,omitempty"`

	// PayNowCoveragesWithTax If true, all coverages will be added with taxes
	PayNowCoveragesWithTax *bool `json:"payNowCoveragesWithTax,omitempty"`

	// PromotionCode Promotion Code
	PromotionCode *string `json:"promotionCode,omitempty"`

	// ProxyjsHops Intermediate ProxyJS servers
	ProxyjsHops *string `json:"proxyjsHops,omitempty"`

	// RateQualifier Rate Qualifier
	RateQualifier *string `json:"rateQualifier,omitempty"`

	// ResidenceCountry Customer country of residence
	ResidenceCountry *string `json:"residenceCountry,omitempty"`

	// ResidenceCountryMapping Residence country mapping. Residence of the customer in request in mapped to the country as in property value. Example: {"AT":"DE","IE":"BE","SE":"DK"}
	ResidenceCountryMapping *map[string]string `json:"residenceCountryMapping,omitempty"`

	// SendAgencyBillingNumberWithBooking If this value is set to true in contract, billing number is sent with booking request to supplier
	SendAgencyBillingNumberWithBooking *bool `json:"sendAgencyBillingNumberWithBooking,omitempty"`

	// SendVoucher Send or not Voucher element
	SendVoucher *bool `json:"sendVoucher,omitempty"`

	// SupplierApiUrl Supplier API url
	SupplierApiUrl string `json:"supplierApiUrl"`

	// SupplierPromotionalDiscount Supplier discount percentages for estimated car price without applied supplier discount. [corp_discount_nmbr]_[promotion_code]:discount percentage> - example:{"154080_169680":25}
	SupplierPromotionalDiscount *map[string]interface{} `json:"supplierPromotionalDiscount,omitempty"`

	// Taco Travel Agency Commission Number
	Taco *string `json:"taco,omitempty"`

	// TaxExclCoverageCountries Tax exclusive coverage countries. Example: ["AA", "BB"]
	TaxExclCoverageCountries *[]string `json:"taxExclCoverageCountries,omitempty"`

	// TaxExclFees Fees that are tax exclusive in certain countries. Example: { "AIRPORT CONCESSION RECOVERY": ["SE", "SA"] }
	TaxExclFees *string `json:"taxExclFees,omitempty"`

	// Tour IT/Tour Number
	Tour *string `json:"tour,omitempty"`

	// TravelPurpose Travel Purpose
	TravelPurpose *string `json:"travelPurpose,omitempty"`

	// UseDirectSell If true, Direct Sell type booking and modify is used. If false or not present - Reference Sell is used
	UseDirectSell *bool `json:"useDirectSell,omitempty"`

	// Vc Validation Code assigned by Hertz
	Vc *string `json:"vc,omitempty"`

	// VehicleWhereAtMapping Vehicle where at mapping
	VehicleWhereAtMapping *map[string]interface{} `json:"vehicleWhereAtMapping,omitempty"`

	// VendorCode Vendor code like ZE, FF, ZR or ZT
	VendorCode string `json:"vendorCode"`

	// VendorCodeImport Mapping vendor code like ZE, FF, ZR or ZT
	VendorCodeImport *string `json:"vendorCodeImport,omitempty"`

	// Vn Vendor Number
	Vn *string `json:"vn,omitempty"`

	// VoucherContractBillingType If value is Partial, EstimatedTotalAmount from rates request is added to the booking request.
	VoucherContractBillingType *string `json:"voucherContractBillingType,omitempty"`
}

// Location defines model for Location.
type Location struct {
	// AdditionalContact All other means for contacting the supplier's location
	AdditionalContact *[]struct {
		ContactType LocationAdditionalContactContactType `json:"contactType"`
		Value       string                               `json:"value"`
	} `json:"additionalContact,omitempty"`

	// Address Address
	Address *string `json:"address,omitempty"`

	// Address2 Address line 2
	Address2 *string `json:"address2,omitempty"`

	// Address3 Address line 3
	Address3 *string `json:"address3,omitempty"`

	// City City
	City *string `json:"city,omitempty"`

	// Code Location code
	Code string `json:"code"`

	// Country Country ISO code
	Country string `json:"country"`

	// Currency Currency
	Currency *string `json:"currency,omitempty"`

	// DropOffBranches Drop-off branches (including fees)
	DropOffBranches *[]interface{} `json:"dropOffBranches,omitempty"`

	// Email Location primary e-mail
	Email *openapi_types.Email `json:"email,omitempty"`

	// Extras Extras. Will be returned when microservice requests extras per location
	Extras *[]interface{} `json:"extras,omitempty"`

	// Iata IATA code
	Iata *string `json:"iata,omitempty"`

	// Latitude Latitude
	Latitude *float32 `json:"latitude,omitempty"`

	// Longitude Longitude
	Longitude *float32 `json:"longitude,omitempty"`

	// MaxRentalDays Maximum rental days
	MaxRentalDays *int `json:"maxRentalDays,omitempty"`

	// MinRentalDays Minimum rental days
	MinRentalDays *int `json:"minRentalDays,omitempty"`

	// Name Location name
	Name       string `json:"name"`
	OohDropoff *bool  `json:"oohDropoff,omitempty"`
	OohPickup  *bool  `json:"oohPickup,omitempty"`

	// OpeningHours Opening hours
	OpeningHours *[]OpeningTime `json:"openingHours,omitempty"`

	// Phone Phone
	Phone *string `json:"phone,omitempty"`

	// PostalCode Postal code
	PostalCode *string `json:"postalCode,omitempty"`

	// RawData Original supplier data
	RawData struct {
		Content     string `json:"content"`
		ContentType string `json:"contentType"`
	} `json:"rawData"`

	// SpecialInstructions Special instructions
	SpecialInstructions *string `json:"specialInstructions,omitempty"`

	// StartReservationHours Minimum hours to car pickup
	StartReservationHours *int `json:"startReservationHours,omitempty"`

	// State State name
	State *string `json:"state,omitempty"`

	// VehicleWhereAt Vehicle where at facility (VWF) -  OTA standard
	VehicleWhereAt *int `json:"vehicleWhereAt,omitempty"`

	// Vehicles Vehicles. Will be returned when microservice requests vehicles per location
	Vehicles *[]interface{} `json:"vehicles,omitempty"`
}

// LocationAdditionalContactContactType defines model for Location.AdditionalContact.ContactType.
type LocationAdditionalContactContactType string

// LocationsRequestParams defines model for LocationsRequestParams.
type LocationsRequestParams struct {
	Configuration LocationsRequestParams_Configuration `json:"configuration"`
	Timeouts      Timeouts                             `json:"timeouts"`
}

// LocationsRequestParams_Configuration defines model for LocationsRequestParams.Configuration.
type LocationsRequestParams_Configuration struct {
	union json.RawMessage
}

// LocationsResponse defines model for LocationsResponse.
type LocationsResponse struct {
	// Errors List supplier errors
	Errors *SupplierResponseErrors `json:"errors,omitempty"`

	// Locations Locations available for the supplier
	Locations *[]Location `json:"locations,omitempty"`

	// SupplierRequests Requests made to and responses received from supplier system
	SupplierRequests *SupplierRequests `json:"supplierRequests,omitempty"`
}

// Mileage defines model for Mileage.
type Mileage struct {
	// DistanceUnit Included distance units.
	DistanceUnit *MileageDistanceUnit `json:"distanceUnit,omitempty"`

	// IncludedDistance Number of Kilometers/miles free of charge included in rental price
	IncludedDistance *string `json:"includedDistance,omitempty"`

	// PeriodUnit Included mileage period unit.
	PeriodUnit *MileagePeriodUnit `json:"periodUnit,omitempty"`

	// Unlimited Unlimited mileage during rental
	Unlimited *bool `json:"unlimited,omitempty"`
}

// MileageDistanceUnit Included distance units.
type MileageDistanceUnit string

// MileagePeriodUnit Included mileage period unit.
type MileagePeriodUnit string

// ModifyRequestParams defines model for ModifyRequestParams.
type ModifyRequestParams struct {
	AirlineCode *string `json:"airlineCode,omitempty"`

	// BrokerReference Car Rental Gateway booking/broker reference
	BrokerReference string `json:"brokerReference"`
	Comments        *struct {
		// Customer A message from customer to supplier
		Customer *string `json:"customer,omitempty"`
	} `json:"comments,omitempty"`
	Configuration ModifyRequestParams_Configuration `json:"configuration"`
	Contract      Contract                          `json:"contract"`
	Customer      Customer                          `json:"customer"`
	DropOff       RequestBranchWithTimeZone         `json:"dropOff"`
	ExtrasAndFees *[]BookingExtraOrFee              `json:"extrasAndFees,omitempty"`

	// FlightNo Flight number
	FlightNo *string `json:"flightNo,omitempty"`

	// FlightNumber Flight number
	FlightNumber *string `json:"flightNumber,omitempty"`

	// ModuleId Module ID
	ModuleId int `json:"moduleId"`

	// OnlineFeeMap Online fee map
	OnlineFeeMap *map[string]interface{}   `json:"onlineFeeMap,omitempty"`
	PickUp       RequestBranchWithTimeZone `json:"pickUp"`

	// RentalDays Rental days
	RentalDays *int `json:"rentalDays,omitempty"`

	// ReservNumber Car Rental Gateway booking reservation number
	ReservNumber string `json:"reservNumber"`

	// SupplierBookingReference Supplier booking reference
	SupplierBookingReference string `json:"supplierBookingReference"`

	// SupplierRateReference Supplier rate reference from rates request
	SupplierRateReference string `json:"supplierRateReference"`

	// SupplierSpecificInformation For carrying supplier specific information
	SupplierSpecificInformation *SupplierSpecificInformation `json:"supplierSpecificInformation,omitempty"`
	Timeouts                    Timeouts                     `json:"timeouts"`

	// VehicleClass Vehicle class in supplier system
	VehicleClass string `json:"vehicleClass"`
}

// ModifyRequestParams_Configuration defines model for ModifyRequestParams.Configuration.
type ModifyRequestParams_Configuration struct {
	union json.RawMessage
}

// ModifyResponse defines model for ModifyResponse.
type ModifyResponse struct {
	// Errors List supplier errors
	Errors *SupplierResponseErrors `json:"errors,omitempty"`

	// Status Booking status
	Status *ModifyResponseStatus `json:"status,omitempty"`

	// SupplierBookingReference Supplier booking reference
	SupplierBookingReference *string `json:"supplierBookingReference,omitempty"`

	// SupplierData Supplier specific data about the booking as JSON string. This data is stored with booking and passed as configuration parameters for cancel, modify and bookingstatus requests
	SupplierData *map[string]interface{} `json:"supplierData,omitempty"`

	// SupplierRequests Requests made to and responses received from supplier system
	SupplierRequests *SupplierRequests `json:"supplierRequests,omitempty"`
}

// ModifyResponseStatus Booking status
type ModifyResponseStatus string

// OpeningTime defines model for OpeningTime.
type OpeningTime struct {
	ApplyFee *bool `json:"applyFee,omitempty"`

	// Day 0 - everyday, others - calendar day
	Day *int   `json:"day,omitempty"`
	End string `json:"end"`

	// EndDay 0 - everyday, others - calendar day
	EndDay *int `json:"endDay,omitempty"`

	// EndMonth 0 - all months, others - calendar month
	EndMonth *int `json:"endMonth,omitempty"`

	// EndYear full year
	EndYear *int     `json:"endYear,omitempty"`
	Fee     *float32 `json:"fee,omitempty"`

	// Month 0 - all months, others - calendar month
	Month *int   `json:"month,omitempty"`
	Ooh   *bool  `json:"ooh,omitempty"`
	Open  bool   `json:"open"`
	Start string `json:"start"`

	// Weekday 0 - everyday, others - weekday
	Weekday int `json:"weekday"`

	// Year full year
	Year *int `json:"year,omitempty"`
}

// PassthroughPayment defines model for PassthroughPayment.
type PassthroughPayment struct {
	// Method Payment method
	Method string `json:"method"`

	// SptToken Spt token
	SptToken string `json:"sptToken"`
}

// PriceAmount Price amount with currency
type PriceAmount struct {
	Amount   RoundedFloat `json:"amount"`
	Currency string       `json:"currency"`
}

// ProfitMaxDHTConfiguration Supplier specific parameters for all post-type requests
type ProfitMaxDHTConfiguration struct {
	// AgentDutyCode Agent Duty code for Profitmax
	AgentDutyCode *string `json:"agentDutyCode,omitempty"`

	// Client Brokers Name
	Client string `json:"client"`

	// Cp Company Name Code
	Cp *string `json:"cp,omitempty"`

	// Destination Vendor Name: Dollar, Thrifty, Hertz
	Destination string `json:"destination"`

	// FpPayFeesLocally It is used with full-prepay deals, to determine are the fees payable locally (true) or pay now (false). Default is false
	FpPayFeesLocally *bool `json:"fpPayFeesLocally,omitempty"`

	// FpPaynowVehiclePriceWithTax It works with full-prepay deals. If true, the Tax (VAT) is added to the vehicle price. Default is false
	FpPaynowVehiclePriceWithTax *bool `json:"fpPaynowVehiclePriceWithTax,omitempty"`

	// LastName Customer's Lastname
	LastName *string `json:"lastName,omitempty"`

	// MaxResponses Max number of responses expected from Hertz. Default is 10
	MaxResponses *int `json:"maxResponses,omitempty"`

	// Password Supplier Password
	Password string `json:"password"`

	// RateQualifier Rate Qualifier
	RateQualifier *string `json:"rateQualifier,omitempty"`

	// ResidenceCountry Customer country of residence
	ResidenceCountry *string `json:"residenceCountry,omitempty"`

	// SendVoucher Send or not Voucher element
	SendVoucher *bool `json:"sendVoucher,omitempty"`

	// SupplierApiUrl Supplier API url
	SupplierApiUrl string `json:"supplierApiUrl"`

	// Test indicate the target of request, if true test environment else request sent to production
	Test *bool `json:"test,omitempty"`

	// TourNumber Tour Number
	TourNumber *string `json:"tourNumber,omitempty"`

	// TravelPurpose Travel Purpose
	TravelPurpose *string `json:"travelPurpose,omitempty"`

	// Username Supplier Username
	Username string `json:"username"`

	// VendorCode Vendor Code
	VendorCode *string `json:"vendorCode,omitempty"`

	// Vn Requestor Id for type 4 requestorId
	Vn *string `json:"vn,omitempty"`
}

// RatesRequestParams Rates request object
type RatesRequestParams struct {
	// Age Driver age
	Age       int              `json:"age"`
	AgeRanges *[]AgeRange      `json:"ageRanges,omitempty"`
	Booking   *ExistingBooking `json:"booking,omitempty"`

	// BranchExtras Array of request's pickup branch extra OTA codes that is optionally submitted when supplier needs this data for the request
	BranchExtras  *[]string                        `json:"branchExtras,omitempty"`
	Configuration RatesRequestParams_Configuration `json:"configuration"`
	Contract      Contract                         `json:"contract"`

	// DriverAgeRange Driver age range array of objects
	DriverAgeRange *[]struct {
		Classes *map[string]interface{} `json:"classes,omitempty"`
		Code    *string                 `json:"code,omitempty"`
		Max     *float32                `json:"max,omitempty"`
		Min     *float32                `json:"min,omitempty"`
		OtaCode *string                 `json:"otaCode,omitempty"`
	} `json:"driverAgeRange,omitempty"`
	DropOff RequestBranch `json:"dropOff"`

	// Iata pickUp and/or dropOff location iata code
	Iata *string `json:"iata,omitempty"`

	// ModuleId Module ID
	ModuleId     int   `json:"moduleId"`
	OnlineExtras *bool `json:"onlineExtras,omitempty"`

	// OnlineFeeMap Online fee map
	OnlineFeeMap *map[string]interface{} `json:"onlineFeeMap,omitempty"`
	PickUp       RequestBranch           `json:"pickUp"`

	// RentalDays Number of rental days
	RentalDays int `json:"rentalDays"`

	// ResidenceCountry Country ISO code of branch
	ResidenceCountry string   `json:"residenceCountry"`
	TaxRate          float32  `json:"taxRate"`
	Timeouts         Timeouts `json:"timeouts"`
}

// RatesRequestParams_Configuration defines model for RatesRequestParams.Configuration.
type RatesRequestParams_Configuration struct {
	union json.RawMessage
}

// RatesResponse defines model for RatesResponse.
type RatesResponse struct {
	// BranchVehicleWhereAt Vehicle Where At Facility OTA code. Misu updates 'vehicleWhereAt' when parsing rates
	BranchVehicleWhereAt string `json:"branchVehicleWhereAt,omitempty"`

	// Errors List supplier errors
	Errors *SupplierResponseErrors `json:"errors,omitempty"`

	// SpecialInstructions Branch specific special instructions. Misu updates branch 'specialInstructions' property when parsing rates
	SpecialInstructions string `json:"specialInstructions,omitempty"`

	// SupplierRequests Requests made to and responses received from supplier system
	SupplierRequests *SupplierRequests `json:"supplierRequests,omitempty"`

	// Vehicles Available vehicles for specified search parameters
	Vehicles []Vehicle `json:"vehicles"`
}

// RentlyConfiguration Supplier specific parameters for all post-type requests except booking. Override in supplier module for all post-routes except booking
type RentlyConfiguration struct {
	// CommercialAgreementCode Commercial agreement code
	CommercialAgreementCode RentlyConfigurationCommercialAgreementCode `json:"commercialAgreementCode"`

	// Password Password
	Password string `json:"password"`

	// SupplierApiUrl Supplier api url
	SupplierApiUrl string `json:"supplierApiUrl"`

	// Username Username
	Username string `json:"username"`
}

// RentlyConfigurationCommercialAgreementCode Commercial agreement code
type RentlyConfigurationCommercialAgreementCode string

// RequestBranch defines model for RequestBranch.
type RequestBranch struct {
	// Code Branch code
	Code string `json:"code"`

	// Country Country ISO code of branch
	Country  string    `json:"country"`
	DateTime time.Time `json:"dateTime"`
	Iata     *string   `json:"iata,omitempty"`
}

// RequestBranchWithTimeZone defines model for RequestBranchWithTimeZone.
type RequestBranchWithTimeZone struct {
	// Code Branch code
	Code string `json:"code"`

	// Country Country ISO code of branch
	Country  string    `json:"country"`
	DateTime time.Time `json:"dateTime"`

	// TimeZone TimeZone of dateTime
	TimeZone *string `json:"timeZone,omitempty"`
}

// RequestContent defines model for RequestContent.
type RequestContent struct {
	// Body Request body
	Body *string `json:"body,omitempty"`

	// Headers Request headers
	Headers *map[string]interface{} `json:"headers,omitempty"`

	// Method Request method
	Method *string `json:"method,omitempty"`

	// Url Targeted url
	Url *string `json:"url,omitempty"`
}

// ResponseContent defines model for ResponseContent.
type ResponseContent struct {
	// Body Response body
	Body *string `json:"body,omitempty"`

	// Headers Response headers
	Headers *map[string]interface{} `json:"headers,omitempty"`

	// StatusCode Response status
	StatusCode *int `json:"statusCode,omitempty"`
}

// SupplierPassthrough defines model for SupplierPassthrough.
type SupplierPassthrough struct {
	Payment PassthroughPayment `json:"payment"`
}

// SupplierRequest defines model for SupplierRequest.
type SupplierRequest struct {
	// Duration Duration
	Duration *int `json:"duration,omitempty"`

	// Name Request name (e.g. rates, location, booking, etc)
	Name            *SupplierRequestName `json:"name,omitempty"`
	RequestContent  *RequestContent      `json:"requestContent,omitempty"`
	ResponseContent *ResponseContent     `json:"responseContent,omitempty"`

	// StartDateTime Datetime when the request was submitted
	StartDateTime *time.Time `json:"startDateTime,omitempty"`
}

// SupplierRequestName Request name (e.g. rates, location, booking, etc)
type SupplierRequestName string

// SupplierRequests Requests made to and responses received from supplier system
type SupplierRequests = []SupplierRequest

// SupplierResponseError defines model for SupplierResponseError.
type SupplierResponseError struct {
	// Code Supplier code
	Code SupplierResponseErrorCode `json:"code"`

	// Details Details
	Details *string `json:"details,omitempty"`

	// Message Message
	Message string `json:"message"`
}

// SupplierResponseErrorCode Supplier code
type SupplierResponseErrorCode string

// SupplierResponseErrors List supplier errors
type SupplierResponseErrors = []SupplierResponseError

// SupplierSpecificInformation For carrying supplier specific information
type SupplierSpecificInformation struct {
	// HertzBillingNumber Hertz specific billing number that is sent with booking request
	HertzBillingNumber *string `json:"hertzBillingNumber,omitempty"`
}

// Timeouts defines model for Timeouts.
type Timeouts struct {
	// Booking Maximum time in milliseconds booking request is expected to return answer
	Booking *int `json:"booking,omitempty"`

	// Cancel Maximum time in milliseconds cancel request is expected to return answer
	Cancel *int `json:"cancel,omitempty"`

	// Default Default value for maximum time in milliseconds when request is expected to return answer
	Default int `json:"default"`

	// Extras Maximum time in milliseconds extras request is expected to return answer
	Extras *int `json:"extras,omitempty"`

	// Locations Maximum time in milliseconds locations request is expected to return answer
	Locations *int `json:"locations,omitempty"`

	// Rates Maximum time in milliseconds rates request is expected to return answer
	Rates *int `json:"rates,omitempty"`
}

// Vehicle defines model for Vehicle.
type Vehicle struct {
	// AcrissCode Acriss code of the vehicle
	AcrissCode *string `json:"acrissCode,omitempty"`

	// AdditionalAttributes Additional attributes
	AdditionalAttributes *[]struct {
		// Attribute Name
		Attribute *string `json:"attribute,omitempty"`

		// Value Value
		Value interface{} `json:"value"`
	} `json:"additionalAttributes,omitempty"`

	// Age If supplier provides bookable range then min max could be returned so driveragecheck can be enabled (overriden by Driver Age Manager)
	Age *struct {
		// Max Car availability max age
		Max int `json:"max"`

		// Min Car availability min age
		Min int `json:"min"`
	} `json:"age,omitempty"`

	// BasePrice Price amount with currency
	BasePrice *PriceAmount `json:"basePrice,omitempty"`

	// BigSuitcases How many big suitcases fit in the vehicle
	BigSuitcases *int `json:"bigSuitcases,omitempty"`

	// Class Vehicle class in supplier system
	Class string `json:"class"`

	// Doors Number of doors of the vehicle
	Doors *int `json:"doors,omitempty"`

	// DriveType Type of the drive
	DriveType *VehicleDriveType `json:"driveType,omitempty"`

	// Excess Price amount with currency
	Excess *PriceAmount `json:"excess,omitempty"`

	// ExtrasAndFees Extras and fees
	ExtrasAndFees *[]ExtraOrFee `json:"extrasAndFees,omitempty"`

	// FuelType Type of the fuel
	FuelType *VehicleFuelType `json:"fuelType,omitempty"`

	// HasABS Does the vehicle have ABS
	HasABS *bool `json:"hasABS,omitempty"`

	// HasAirco Does the vehicle have air conditioner
	HasAirco *bool `json:"hasAirco,omitempty"`

	// HasGPS Does the vehicle have GPS
	HasGPS *bool `json:"hasGPS,omitempty"`

	// ImageUrl URL to supplier vehicle image
	ImageUrl *string `json:"imageUrl,omitempty"`

	// Keyless Keyless
	Keyless *bool    `json:"keyless,omitempty"`
	Mileage *Mileage `json:"mileage,omitempty"`

	// ModelGuaranteed Is the proposed model guaranteed
	ModelGuaranteed *bool `json:"modelGuaranteed,omitempty"`

	// Name Vehicle name
	Name string `json:"name"`

	// Price Price amount with currency
	Price PriceAmount `json:"price"`

	// Profit Profit
	Profit *float32 `json:"profit,omitempty"`

	// Seats Number of seats in the vehicle
	Seats *int `json:"seats,omitempty"`

	// SmallSuitcases How many small suitcases fit in the vehicle
	SmallSuitcases *int `json:"smallSuitcases,omitempty"`

	// Status Status
	Status VehicleStatus `json:"status"`

	// SupplierRateReference Supplier rate reference
	SupplierRateReference *string `json:"supplierRateReference,omitempty"`

	// TransmissionType Type of the transmission
	TransmissionType *VehicleTransmissionType `json:"transmissionType,omitempty"`
}

// VehicleDriveType Type of the drive
type VehicleDriveType string

// VehicleFuelType Type of the fuel
type VehicleFuelType string

// VehicleStatus Status
type VehicleStatus string

// VehicleTransmissionType Type of the transmission
type VehicleTransmissionType string

// RequiredPlatformInPath defines model for requiredPlatformInPath.
type RequiredPlatformInPath string

// CreateBookingParamsPlatform defines parameters for CreateBooking.
type CreateBookingParamsPlatform string

// CheckBookingStatusParamsPlatform defines parameters for CheckBookingStatus.
type CheckBookingStatusParamsPlatform string

// CancelBookingParamsPlatform defines parameters for CancelBooking.
type CancelBookingParamsPlatform string

// GetLocationsParamsPlatform defines parameters for GetLocations.
type GetLocationsParamsPlatform string

// ModifyBookingParamsPlatform defines parameters for ModifyBooking.
type ModifyBookingParamsPlatform string

// GetRatesParamsPlatform defines parameters for GetRates.
type GetRatesParamsPlatform string

// CreateBookingJSONRequestBody defines body for CreateBooking for application/json ContentType.
type CreateBookingJSONRequestBody = BookingRequestParams

// CheckBookingStatusJSONRequestBody defines body for CheckBookingStatus for application/json ContentType.
type CheckBookingStatusJSONRequestBody = BookingStatusRequestParams

// CancelBookingJSONRequestBody defines body for CancelBooking for application/json ContentType.
type CancelBookingJSONRequestBody = CancelRequestParams

// GetLocationsJSONRequestBody defines body for GetLocations for application/json ContentType.
type GetLocationsJSONRequestBody = LocationsRequestParams

// ModifyBookingJSONRequestBody defines body for ModifyBooking for application/json ContentType.
type ModifyBookingJSONRequestBody = ModifyRequestParams

// GetRatesJSONRequestBody defines body for GetRates for application/json ContentType.
type GetRatesJSONRequestBody = RatesRequestParams

// AsHertzConfiguration returns the union data inside the BookingRequestParams_Configuration as a HertzConfiguration
func (t BookingRequestParams_Configuration) AsHertzConfiguration() (HertzConfiguration, error) {
	var body HertzConfiguration
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromHertzConfiguration overwrites any union data inside the BookingRequestParams_Configuration as the provided HertzConfiguration
func (t *BookingRequestParams_Configuration) FromHertzConfiguration(v HertzConfiguration) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeHertzConfiguration performs a merge with any union data inside the BookingRequestParams_Configuration, using the provided HertzConfiguration
func (t *BookingRequestParams_Configuration) MergeHertzConfiguration(v HertzConfiguration) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

// AsProfitMaxDHTConfiguration returns the union data inside the BookingRequestParams_Configuration as a ProfitMaxDHTConfiguration
func (t BookingRequestParams_Configuration) AsProfitMaxDHTConfiguration() (ProfitMaxDHTConfiguration, error) {
	var body ProfitMaxDHTConfiguration
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromProfitMaxDHTConfiguration overwrites any union data inside the BookingRequestParams_Configuration as the provided ProfitMaxDHTConfiguration
func (t *BookingRequestParams_Configuration) FromProfitMaxDHTConfiguration(v ProfitMaxDHTConfiguration) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeProfitMaxDHTConfiguration performs a merge with any union data inside the BookingRequestParams_Configuration, using the provided ProfitMaxDHTConfiguration
func (t *BookingRequestParams_Configuration) MergeProfitMaxDHTConfiguration(v ProfitMaxDHTConfiguration) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

// AsBookingComConfiguration returns the union data inside the BookingRequestParams_Configuration as a BookingComConfiguration
func (t BookingRequestParams_Configuration) AsBookingComConfiguration() (BookingComConfiguration, error) {
	var body BookingComConfiguration
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromBookingComConfiguration overwrites any union data inside the BookingRequestParams_Configuration as the provided BookingComConfiguration
func (t *BookingRequestParams_Configuration) FromBookingComConfiguration(v BookingComConfiguration) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeBookingComConfiguration performs a merge with any union data inside the BookingRequestParams_Configuration, using the provided BookingComConfiguration
func (t *BookingRequestParams_Configuration) MergeBookingComConfiguration(v BookingComConfiguration) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

// AsAnyRentConfiguration returns the union data inside the BookingRequestParams_Configuration as a AnyRentConfiguration
func (t BookingRequestParams_Configuration) AsAnyRentConfiguration() (AnyRentConfiguration, error) {
	var body AnyRentConfiguration
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromAnyRentConfiguration overwrites any union data inside the BookingRequestParams_Configuration as the provided AnyRentConfiguration
func (t *BookingRequestParams_Configuration) FromAnyRentConfiguration(v AnyRentConfiguration) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeAnyRentConfiguration performs a merge with any union data inside the BookingRequestParams_Configuration, using the provided AnyRentConfiguration
func (t *BookingRequestParams_Configuration) MergeAnyRentConfiguration(v AnyRentConfiguration) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

// AsRentlyConfiguration returns the union data inside the BookingRequestParams_Configuration as a RentlyConfiguration
func (t BookingRequestParams_Configuration) AsRentlyConfiguration() (RentlyConfiguration, error) {
	var body RentlyConfiguration
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromRentlyConfiguration overwrites any union data inside the BookingRequestParams_Configuration as the provided RentlyConfiguration
func (t *BookingRequestParams_Configuration) FromRentlyConfiguration(v RentlyConfiguration) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeRentlyConfiguration performs a merge with any union data inside the BookingRequestParams_Configuration, using the provided RentlyConfiguration
func (t *BookingRequestParams_Configuration) MergeRentlyConfiguration(v RentlyConfiguration) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

func (t BookingRequestParams_Configuration) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *BookingRequestParams_Configuration) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsHertzConfiguration returns the union data inside the BookingStatusRequestParams_Configuration as a HertzConfiguration
func (t BookingStatusRequestParams_Configuration) AsHertzConfiguration() (HertzConfiguration, error) {
	var body HertzConfiguration
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromHertzConfiguration overwrites any union data inside the BookingStatusRequestParams_Configuration as the provided HertzConfiguration
func (t *BookingStatusRequestParams_Configuration) FromHertzConfiguration(v HertzConfiguration) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeHertzConfiguration performs a merge with any union data inside the BookingStatusRequestParams_Configuration, using the provided HertzConfiguration
func (t *BookingStatusRequestParams_Configuration) MergeHertzConfiguration(v HertzConfiguration) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

// AsProfitMaxDHTConfiguration returns the union data inside the BookingStatusRequestParams_Configuration as a ProfitMaxDHTConfiguration
func (t BookingStatusRequestParams_Configuration) AsProfitMaxDHTConfiguration() (ProfitMaxDHTConfiguration, error) {
	var body ProfitMaxDHTConfiguration
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromProfitMaxDHTConfiguration overwrites any union data inside the BookingStatusRequestParams_Configuration as the provided ProfitMaxDHTConfiguration
func (t *BookingStatusRequestParams_Configuration) FromProfitMaxDHTConfiguration(v ProfitMaxDHTConfiguration) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeProfitMaxDHTConfiguration performs a merge with any union data inside the BookingStatusRequestParams_Configuration, using the provided ProfitMaxDHTConfiguration
func (t *BookingStatusRequestParams_Configuration) MergeProfitMaxDHTConfiguration(v ProfitMaxDHTConfiguration) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

// AsBookingComConfiguration returns the union data inside the BookingStatusRequestParams_Configuration as a BookingComConfiguration
func (t BookingStatusRequestParams_Configuration) AsBookingComConfiguration() (BookingComConfiguration, error) {
	var body BookingComConfiguration
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromBookingComConfiguration overwrites any union data inside the BookingStatusRequestParams_Configuration as the provided BookingComConfiguration
func (t *BookingStatusRequestParams_Configuration) FromBookingComConfiguration(v BookingComConfiguration) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeBookingComConfiguration performs a merge with any union data inside the BookingStatusRequestParams_Configuration, using the provided BookingComConfiguration
func (t *BookingStatusRequestParams_Configuration) MergeBookingComConfiguration(v BookingComConfiguration) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

// AsAnyRentConfiguration returns the union data inside the BookingStatusRequestParams_Configuration as a AnyRentConfiguration
func (t BookingStatusRequestParams_Configuration) AsAnyRentConfiguration() (AnyRentConfiguration, error) {
	var body AnyRentConfiguration
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromAnyRentConfiguration overwrites any union data inside the BookingStatusRequestParams_Configuration as the provided AnyRentConfiguration
func (t *BookingStatusRequestParams_Configuration) FromAnyRentConfiguration(v AnyRentConfiguration) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeAnyRentConfiguration performs a merge with any union data inside the BookingStatusRequestParams_Configuration, using the provided AnyRentConfiguration
func (t *BookingStatusRequestParams_Configuration) MergeAnyRentConfiguration(v AnyRentConfiguration) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

// AsRentlyConfiguration returns the union data inside the BookingStatusRequestParams_Configuration as a RentlyConfiguration
func (t BookingStatusRequestParams_Configuration) AsRentlyConfiguration() (RentlyConfiguration, error) {
	var body RentlyConfiguration
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromRentlyConfiguration overwrites any union data inside the BookingStatusRequestParams_Configuration as the provided RentlyConfiguration
func (t *BookingStatusRequestParams_Configuration) FromRentlyConfiguration(v RentlyConfiguration) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeRentlyConfiguration performs a merge with any union data inside the BookingStatusRequestParams_Configuration, using the provided RentlyConfiguration
func (t *BookingStatusRequestParams_Configuration) MergeRentlyConfiguration(v RentlyConfiguration) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

func (t BookingStatusRequestParams_Configuration) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *BookingStatusRequestParams_Configuration) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsHertzConfiguration returns the union data inside the CancelRequestParams_Configuration as a HertzConfiguration
func (t CancelRequestParams_Configuration) AsHertzConfiguration() (HertzConfiguration, error) {
	var body HertzConfiguration
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromHertzConfiguration overwrites any union data inside the CancelRequestParams_Configuration as the provided HertzConfiguration
func (t *CancelRequestParams_Configuration) FromHertzConfiguration(v HertzConfiguration) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeHertzConfiguration performs a merge with any union data inside the CancelRequestParams_Configuration, using the provided HertzConfiguration
func (t *CancelRequestParams_Configuration) MergeHertzConfiguration(v HertzConfiguration) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

// AsProfitMaxDHTConfiguration returns the union data inside the CancelRequestParams_Configuration as a ProfitMaxDHTConfiguration
func (t CancelRequestParams_Configuration) AsProfitMaxDHTConfiguration() (ProfitMaxDHTConfiguration, error) {
	var body ProfitMaxDHTConfiguration
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromProfitMaxDHTConfiguration overwrites any union data inside the CancelRequestParams_Configuration as the provided ProfitMaxDHTConfiguration
func (t *CancelRequestParams_Configuration) FromProfitMaxDHTConfiguration(v ProfitMaxDHTConfiguration) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeProfitMaxDHTConfiguration performs a merge with any union data inside the CancelRequestParams_Configuration, using the provided ProfitMaxDHTConfiguration
func (t *CancelRequestParams_Configuration) MergeProfitMaxDHTConfiguration(v ProfitMaxDHTConfiguration) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

// AsBookingComConfiguration returns the union data inside the CancelRequestParams_Configuration as a BookingComConfiguration
func (t CancelRequestParams_Configuration) AsBookingComConfiguration() (BookingComConfiguration, error) {
	var body BookingComConfiguration
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromBookingComConfiguration overwrites any union data inside the CancelRequestParams_Configuration as the provided BookingComConfiguration
func (t *CancelRequestParams_Configuration) FromBookingComConfiguration(v BookingComConfiguration) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeBookingComConfiguration performs a merge with any union data inside the CancelRequestParams_Configuration, using the provided BookingComConfiguration
func (t *CancelRequestParams_Configuration) MergeBookingComConfiguration(v BookingComConfiguration) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

// AsAnyRentConfiguration returns the union data inside the CancelRequestParams_Configuration as a AnyRentConfiguration
func (t CancelRequestParams_Configuration) AsAnyRentConfiguration() (AnyRentConfiguration, error) {
	var body AnyRentConfiguration
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromAnyRentConfiguration overwrites any union data inside the CancelRequestParams_Configuration as the provided AnyRentConfiguration
func (t *CancelRequestParams_Configuration) FromAnyRentConfiguration(v AnyRentConfiguration) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeAnyRentConfiguration performs a merge with any union data inside the CancelRequestParams_Configuration, using the provided AnyRentConfiguration
func (t *CancelRequestParams_Configuration) MergeAnyRentConfiguration(v AnyRentConfiguration) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

// AsRentlyConfiguration returns the union data inside the CancelRequestParams_Configuration as a RentlyConfiguration
func (t CancelRequestParams_Configuration) AsRentlyConfiguration() (RentlyConfiguration, error) {
	var body RentlyConfiguration
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromRentlyConfiguration overwrites any union data inside the CancelRequestParams_Configuration as the provided RentlyConfiguration
func (t *CancelRequestParams_Configuration) FromRentlyConfiguration(v RentlyConfiguration) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeRentlyConfiguration performs a merge with any union data inside the CancelRequestParams_Configuration, using the provided RentlyConfiguration
func (t *CancelRequestParams_Configuration) MergeRentlyConfiguration(v RentlyConfiguration) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

func (t CancelRequestParams_Configuration) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *CancelRequestParams_Configuration) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsHertzConfiguration returns the union data inside the LocationsRequestParams_Configuration as a HertzConfiguration
func (t LocationsRequestParams_Configuration) AsHertzConfiguration() (HertzConfiguration, error) {
	var body HertzConfiguration
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromHertzConfiguration overwrites any union data inside the LocationsRequestParams_Configuration as the provided HertzConfiguration
func (t *LocationsRequestParams_Configuration) FromHertzConfiguration(v HertzConfiguration) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeHertzConfiguration performs a merge with any union data inside the LocationsRequestParams_Configuration, using the provided HertzConfiguration
func (t *LocationsRequestParams_Configuration) MergeHertzConfiguration(v HertzConfiguration) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

// AsProfitMaxDHTConfiguration returns the union data inside the LocationsRequestParams_Configuration as a ProfitMaxDHTConfiguration
func (t LocationsRequestParams_Configuration) AsProfitMaxDHTConfiguration() (ProfitMaxDHTConfiguration, error) {
	var body ProfitMaxDHTConfiguration
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromProfitMaxDHTConfiguration overwrites any union data inside the LocationsRequestParams_Configuration as the provided ProfitMaxDHTConfiguration
func (t *LocationsRequestParams_Configuration) FromProfitMaxDHTConfiguration(v ProfitMaxDHTConfiguration) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeProfitMaxDHTConfiguration performs a merge with any union data inside the LocationsRequestParams_Configuration, using the provided ProfitMaxDHTConfiguration
func (t *LocationsRequestParams_Configuration) MergeProfitMaxDHTConfiguration(v ProfitMaxDHTConfiguration) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

// AsBookingComConfiguration returns the union data inside the LocationsRequestParams_Configuration as a BookingComConfiguration
func (t LocationsRequestParams_Configuration) AsBookingComConfiguration() (BookingComConfiguration, error) {
	var body BookingComConfiguration
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromBookingComConfiguration overwrites any union data inside the LocationsRequestParams_Configuration as the provided BookingComConfiguration
func (t *LocationsRequestParams_Configuration) FromBookingComConfiguration(v BookingComConfiguration) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeBookingComConfiguration performs a merge with any union data inside the LocationsRequestParams_Configuration, using the provided BookingComConfiguration
func (t *LocationsRequestParams_Configuration) MergeBookingComConfiguration(v BookingComConfiguration) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

// AsAnyRentConfiguration returns the union data inside the LocationsRequestParams_Configuration as a AnyRentConfiguration
func (t LocationsRequestParams_Configuration) AsAnyRentConfiguration() (AnyRentConfiguration, error) {
	var body AnyRentConfiguration
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromAnyRentConfiguration overwrites any union data inside the LocationsRequestParams_Configuration as the provided AnyRentConfiguration
func (t *LocationsRequestParams_Configuration) FromAnyRentConfiguration(v AnyRentConfiguration) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeAnyRentConfiguration performs a merge with any union data inside the LocationsRequestParams_Configuration, using the provided AnyRentConfiguration
func (t *LocationsRequestParams_Configuration) MergeAnyRentConfiguration(v AnyRentConfiguration) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

// AsRentlyConfiguration returns the union data inside the LocationsRequestParams_Configuration as a RentlyConfiguration
func (t LocationsRequestParams_Configuration) AsRentlyConfiguration() (RentlyConfiguration, error) {
	var body RentlyConfiguration
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromRentlyConfiguration overwrites any union data inside the LocationsRequestParams_Configuration as the provided RentlyConfiguration
func (t *LocationsRequestParams_Configuration) FromRentlyConfiguration(v RentlyConfiguration) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeRentlyConfiguration performs a merge with any union data inside the LocationsRequestParams_Configuration, using the provided RentlyConfiguration
func (t *LocationsRequestParams_Configuration) MergeRentlyConfiguration(v RentlyConfiguration) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

func (t LocationsRequestParams_Configuration) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *LocationsRequestParams_Configuration) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsHertzConfiguration returns the union data inside the ModifyRequestParams_Configuration as a HertzConfiguration
func (t ModifyRequestParams_Configuration) AsHertzConfiguration() (HertzConfiguration, error) {
	var body HertzConfiguration
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromHertzConfiguration overwrites any union data inside the ModifyRequestParams_Configuration as the provided HertzConfiguration
func (t *ModifyRequestParams_Configuration) FromHertzConfiguration(v HertzConfiguration) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeHertzConfiguration performs a merge with any union data inside the ModifyRequestParams_Configuration, using the provided HertzConfiguration
func (t *ModifyRequestParams_Configuration) MergeHertzConfiguration(v HertzConfiguration) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

// AsProfitMaxDHTConfiguration returns the union data inside the ModifyRequestParams_Configuration as a ProfitMaxDHTConfiguration
func (t ModifyRequestParams_Configuration) AsProfitMaxDHTConfiguration() (ProfitMaxDHTConfiguration, error) {
	var body ProfitMaxDHTConfiguration
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromProfitMaxDHTConfiguration overwrites any union data inside the ModifyRequestParams_Configuration as the provided ProfitMaxDHTConfiguration
func (t *ModifyRequestParams_Configuration) FromProfitMaxDHTConfiguration(v ProfitMaxDHTConfiguration) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeProfitMaxDHTConfiguration performs a merge with any union data inside the ModifyRequestParams_Configuration, using the provided ProfitMaxDHTConfiguration
func (t *ModifyRequestParams_Configuration) MergeProfitMaxDHTConfiguration(v ProfitMaxDHTConfiguration) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

// AsBookingComConfiguration returns the union data inside the ModifyRequestParams_Configuration as a BookingComConfiguration
func (t ModifyRequestParams_Configuration) AsBookingComConfiguration() (BookingComConfiguration, error) {
	var body BookingComConfiguration
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromBookingComConfiguration overwrites any union data inside the ModifyRequestParams_Configuration as the provided BookingComConfiguration
func (t *ModifyRequestParams_Configuration) FromBookingComConfiguration(v BookingComConfiguration) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeBookingComConfiguration performs a merge with any union data inside the ModifyRequestParams_Configuration, using the provided BookingComConfiguration
func (t *ModifyRequestParams_Configuration) MergeBookingComConfiguration(v BookingComConfiguration) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

// AsAnyRentConfiguration returns the union data inside the ModifyRequestParams_Configuration as a AnyRentConfiguration
func (t ModifyRequestParams_Configuration) AsAnyRentConfiguration() (AnyRentConfiguration, error) {
	var body AnyRentConfiguration
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromAnyRentConfiguration overwrites any union data inside the ModifyRequestParams_Configuration as the provided AnyRentConfiguration
func (t *ModifyRequestParams_Configuration) FromAnyRentConfiguration(v AnyRentConfiguration) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeAnyRentConfiguration performs a merge with any union data inside the ModifyRequestParams_Configuration, using the provided AnyRentConfiguration
func (t *ModifyRequestParams_Configuration) MergeAnyRentConfiguration(v AnyRentConfiguration) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

// AsRentlyConfiguration returns the union data inside the ModifyRequestParams_Configuration as a RentlyConfiguration
func (t ModifyRequestParams_Configuration) AsRentlyConfiguration() (RentlyConfiguration, error) {
	var body RentlyConfiguration
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromRentlyConfiguration overwrites any union data inside the ModifyRequestParams_Configuration as the provided RentlyConfiguration
func (t *ModifyRequestParams_Configuration) FromRentlyConfiguration(v RentlyConfiguration) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeRentlyConfiguration performs a merge with any union data inside the ModifyRequestParams_Configuration, using the provided RentlyConfiguration
func (t *ModifyRequestParams_Configuration) MergeRentlyConfiguration(v RentlyConfiguration) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

func (t ModifyRequestParams_Configuration) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *ModifyRequestParams_Configuration) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsHertzConfiguration returns the union data inside the RatesRequestParams_Configuration as a HertzConfiguration
func (t RatesRequestParams_Configuration) AsHertzConfiguration() (HertzConfiguration, error) {
	var body HertzConfiguration
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromHertzConfiguration overwrites any union data inside the RatesRequestParams_Configuration as the provided HertzConfiguration
func (t *RatesRequestParams_Configuration) FromHertzConfiguration(v HertzConfiguration) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeHertzConfiguration performs a merge with any union data inside the RatesRequestParams_Configuration, using the provided HertzConfiguration
func (t *RatesRequestParams_Configuration) MergeHertzConfiguration(v HertzConfiguration) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

// AsProfitMaxDHTConfiguration returns the union data inside the RatesRequestParams_Configuration as a ProfitMaxDHTConfiguration
func (t RatesRequestParams_Configuration) AsProfitMaxDHTConfiguration() (ProfitMaxDHTConfiguration, error) {
	var body ProfitMaxDHTConfiguration
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromProfitMaxDHTConfiguration overwrites any union data inside the RatesRequestParams_Configuration as the provided ProfitMaxDHTConfiguration
func (t *RatesRequestParams_Configuration) FromProfitMaxDHTConfiguration(v ProfitMaxDHTConfiguration) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeProfitMaxDHTConfiguration performs a merge with any union data inside the RatesRequestParams_Configuration, using the provided ProfitMaxDHTConfiguration
func (t *RatesRequestParams_Configuration) MergeProfitMaxDHTConfiguration(v ProfitMaxDHTConfiguration) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

// AsBookingComConfiguration returns the union data inside the RatesRequestParams_Configuration as a BookingComConfiguration
func (t RatesRequestParams_Configuration) AsBookingComConfiguration() (BookingComConfiguration, error) {
	var body BookingComConfiguration
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromBookingComConfiguration overwrites any union data inside the RatesRequestParams_Configuration as the provided BookingComConfiguration
func (t *RatesRequestParams_Configuration) FromBookingComConfiguration(v BookingComConfiguration) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeBookingComConfiguration performs a merge with any union data inside the RatesRequestParams_Configuration, using the provided BookingComConfiguration
func (t *RatesRequestParams_Configuration) MergeBookingComConfiguration(v BookingComConfiguration) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

// AsAnyRentConfiguration returns the union data inside the RatesRequestParams_Configuration as a AnyRentConfiguration
func (t RatesRequestParams_Configuration) AsAnyRentConfiguration() (AnyRentConfiguration, error) {
	var body AnyRentConfiguration
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromAnyRentConfiguration overwrites any union data inside the RatesRequestParams_Configuration as the provided AnyRentConfiguration
func (t *RatesRequestParams_Configuration) FromAnyRentConfiguration(v AnyRentConfiguration) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeAnyRentConfiguration performs a merge with any union data inside the RatesRequestParams_Configuration, using the provided AnyRentConfiguration
func (t *RatesRequestParams_Configuration) MergeAnyRentConfiguration(v AnyRentConfiguration) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

// AsRentlyConfiguration returns the union data inside the RatesRequestParams_Configuration as a RentlyConfiguration
func (t RatesRequestParams_Configuration) AsRentlyConfiguration() (RentlyConfiguration, error) {
	var body RentlyConfiguration
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromRentlyConfiguration overwrites any union data inside the RatesRequestParams_Configuration as the provided RentlyConfiguration
func (t *RatesRequestParams_Configuration) FromRentlyConfiguration(v RentlyConfiguration) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeRentlyConfiguration performs a merge with any union data inside the RatesRequestParams_Configuration, using the provided RentlyConfiguration
func (t *RatesRequestParams_Configuration) MergeRentlyConfiguration(v RentlyConfiguration) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

func (t RatesRequestParams_Configuration) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *RatesRequestParams_Configuration) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}
